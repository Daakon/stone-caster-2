{
  "id": "save.instructions",
  "version": "1.0.2",
  "description": "Authoritative rules for reading, writing, migrating, and validating persistent game state. No UI control or choice gating here.",
  "preflight": {
    "apply_stylepack_from_world_ui_prefs": true,
    "run_asset_validation": true,
    "on_missing_assets_degrade_gracefully": true,
    "emit_one_dev_note_if_debug": true,
    "apply_anachronism_filter_if_world_tech_profile": true
  },
  "$schema": "rpg/save.instructions.schema.json",
  "flows": {
    "baseline_init": {
      "trigger": "on_adventure_start_if_no_save",
      "steps": [
        {
          "t": "apply_prefs"
        },
        {
          "t": "validate_assets"
        },
        {
          "t": "apply_world_defaults"
        },
        {
          "t": "initialize_presence_ledger"
        },
        {
          "t": "seed_inventory_from_world_starters"
        },
        {
          "t": "seed_stats_from_archetype"
        },
        {
          "t": "derive_headers",
          "out": ["location_name", "time_icon", "time_label", "weather_suffix"]
        },
        {
          "t": "observation_pass",
          "if_hidden_info": "inject_observe_choice"
        },
        {
          "t": "clamp_ranges"
        },
        {
          "t": "repair_missing"
        },
        {
          "t": "final_validate",
          "error_code": "E_SAVE_REPAIR"
        }
      ]
    },
    "turn_merge": {
      "trigger": "on_turn_commit",
      "steps": [
        {
          "t": "apply_acts"
        },
        {
          "t": "recompute_presence_ledger"
        },
        {
          "t": "choice_retention",
          "keep_last": 3
        },
        {
          "t": "clamp_ranges"
        },
        {
          "t": "validate_assets"
        },
        {
          "t": "final_validate",
          "error_code": "E_SAVE_CLAMP"
        }
      ]
    }
  },
  "inventory": {
    "model": "delta",
    "min": 0
  },
  "health": {
    "rescue_downed_on_load": true
  },
  "toggles": {
    "graceful_degradation": true
  },
  "logging": {
    "enabled": true,
    "level": "warn",
    "redact_story_text": true,
    "fields": ["missing_header_inputs", "settings_merge", "settings_write"]
  },
  "new_game_gate": {
    "skip_recap_when": {
      "no_save_id": true,
      "no_handoff_point_summary": true,
      "turn_seq_leq": 1
    },
    "start_blocks": ["headers.scene", "rolls.optional", "choices.conditional"]
  },
  "npc_storage": {
    "path": "npcs",
    "merge": "deep",
    "defaults": {
      "skills": {
        "*": 0
      }
    },
    "shape": "schema.npc.json",
    "on_merge": "deep_merge_by_id"
  },
  "compute_fields_on_read": {
    "npcs[*].computed.narrative_detail_score": "presence_of(appearance.notable_features)*0.15 + presence_of(appearance.signature_movement)*0.1 + presence_of(quirks)*0.15 + presence_of(goals.short_term)*0.1 + presence_of(goals.long_term)*0.1 + presence_of(relationships.with_player)*0.15 + presence_of(relationships.with_npcs)*0.1 + presence_of(skills.tiers)*0.1 + presence_of(stakes)*0.05 | clamp(0,1)"
  },
  "speaker_and_presence": {
    "name_lock_and_perception": true,
    "player_is_speaker": true,
    "npc_never_speaks_as_player": true,
    "npc_interjections_after_resolution_max": 2,
    "presence_ledger_enabled": true,
    "reestablish_presence_on_load_or_scene_start": true,
    "brief_narration_on_presence_change": true
  },
  "checks_reference": {
    "source": "core",
    "model": "5d20_default_with_optional_d20",
    "note": "Do not restate math here; defer to core."
  },
  "observation_pass": {
    "enabled": true,
    "rule": "Surface one Observe option in Choices when hidden info exists.",
    "aid_rules": "companions_may_aid_or_microcheck",
    "grading": "graded_reveals"
  },
  "health_and_companions": {
    "player_vitality_and_conditions": true,
    "show_status_on_load_or_change": true,
    "downed_rules": {
      "death_save_each_turn": true,
      "ally_stabilize_dc_range": [55, 70]
    },
    "flag_high_lethality_options": true,
    "companions_vitality_line_on_load_or_change": true,
    "rescue_choices_when_downed": true,
    "emotional_ripple_on_events": true
  },
  "relationship_delta": {
    "emit_on_change_only": true,
    "max_lines": 2,
    "format_template_source": "style.templates.relationship.delta.tpl"
  },
  "player_facing_json_policy": {
    "never_show_raw_json_to_players": true,
    "allow_debug_export_only_if_requested": true
  },
  "scene_header_fallback": {
    "always_require_time_and_location": true,
    "location_resolution": [
      "save.scene.location_id",
      "world.starting_location_id"
    ],
    "time_resolution": [
      "save.scene.time_of_day",
      "world.time_rules.default_phase_id"
    ],
    "weather_resolution": ["save.scene.weather_brief"],
    "render_template": [
      "style.templates.scene.header.tpl",
      "templates.scene.header.tpl"
    ]
  },
  "inventory_model": {
    "type": "delta",
    "base_stock_source": "adventure.location.inventory",
    "delta_path": "world.location_stock_delta",
    "apply_rule": "effective = max(0, base + delta)",
    "clamp_non_negative": true,
    "remove_zero_deltas_on_write": true,
    "loot_post_processing": {
      "junk_merge_enabled": true,
      "junk_value_threshold_source": "world.codex.logic.junk_value_threshold",
      "collapsed_render_template": "style.templates.inventory.junk.collapsed.tpl",
      "expanded_render_template": "style.templates.inventory.junk.expanded.tpl"
    },
    "ownership_and_transfers": {
      "transfer_log_enabled": true,
      "log_path": "player.transfer_log",
      "entry_shape": [
        "from",
        "to",
        "item_id",
        "qty",
        "where",
        "when",
        "reason"
      ],
      "current_owner_resolution": "consult_transfer_log_then_inventory"
    }
  },
  "choice_context_retention": {
    "persist_last_presented_choices": true,
    "path": "session.last_choices",
    "fields": ["tag", "label", "ts", "scene_id"],
    "max_history": 3,
    "note": "Retention only; gating/logic lives in agency."
  },
  "save_render": {
    "header_inputs": {
      "location_name": "coalesce(scene.location.name, world.header_fallbacks.location_fallback_name, \"\")",
      "time_icon": "coalesce(derived.time.icon, world.time_rules.formatting.show_icon ? derived.time.icon : \"\", \"\")",
      "time_label": "coalesce(derived.time.label, world.time_rules.formatting.show_label ? derived.time.label : \"\", \"\")",
      "weather_suffix": "coalesce(derived.weather_suffix, \"\")"
    },
    "weather_suffix_rule": "derived.weather_brief ? \", \" + derived.weather_brief : \"\"",
    "error_tolerance": {
      "strip_nulls_to_empty": true,
      "coerce_undefined_to_empty": true
    }
  },
  "derive_on_render": {
    "header": {
      "location_name": "coalesce(scene.location.display_name, scene.location.id, '')",
      "time_icon": "coalesce(derived.time.icon, '')",
      "time_label": "coalesce(derived.time.label, '')",
      "weather_suffix": "coalesce(derived.weather_brief, '')"
    }
  },
  "load_merge_policy": {
    "mechanics_visibility": {
      "engine_default": false,
      "save_key": "player.settings.show_mechanics",
      "merge": "if_present_only",
      "on_absent": "keep_engine_default"
    }
  },
  "save_write_policy": {
    "mechanics_visibility": {
      "write_key": "player.settings.show_mechanics",
      "condition": "written_only_if_user_toggled"
    }
  },
  "save_schema_minimum": {
    "meta": ["save_id", "created_at", "updated_at", "version"],
    "player": ["character", "relationships", "settings.show_mechanics?"],
    "scene": ["location_id", "time_of_day", "weather_brief?"],
    "world": ["flags", "location_stock_delta", "known_locations?"],
    "presence": ["roster?"],
    "session": ["last_choices?"]
  },
  "read_flow": [
    "load_save_or_create_new",
    "run_migrations_if_meta.version_is_older",
    "apply_scene_header_fallback",
    "compose_effective_location_inventory (base + delta, clamp >=0)",
    "rehydrate_presence_roster_or_derive_minimal",
    "rehydrate_choice_context_if_present",
    "emit_to_renderer_with_style_headers_and_preferences"
  ],
  "write_flow": [
    "meta.updated_at = now_iso8601",
    "if user_toggled(show_mechanics) then persist_preference(show_mechanics)",
    "write_scene_snapshot(location_id, time_of_day, weather_brief_if_available)",
    "write_world_flags_atomically",
    "apply_relationship_deltas",
    "persist_presence_roster_if_changed",
    "update_location_stock_delta_for_item_changes",
    "persist_choice_context_if_available",
    "remove_zero_deltas_to_keep_save_compact"
  ],
  "migrations": [
    {
      "to": "1.0.1",
      "steps": ["init world.location_stock_delta = {} if missing"]
    },
    {
      "to": "1.0.2",
      "steps": [
        "if scene.time_of_day missing -> 'morning'",
        "if scene.location_id missing -> world's starting location",
        "init session.last_choices = [] if missing"
      ]
    }
  ],
  "validation_hooks": [
    "after_fallback: scene.location_id and scene.time_of_day must be non-empty",
    "after_deltas: all effective inventory counts >= 0",
    "preferences: if show_mechanics present, it must be boolean",
    "relationships: numeric scores; clamp to world bounds if defined",
    "presence: state values must be valid",
    "clamp player.skills.* to [0,3]"
  ]
}
